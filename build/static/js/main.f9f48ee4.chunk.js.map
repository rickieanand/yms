{"version":3,"sources":["components/Chat/Chat.js","components/Join/Join.js","App.js","index.js"],"names":["socket","Header","Layout","Footer","Sider","Content","setup","p5","canvasParentRef","createCanvas","parent","background","on","data","fill","noStroke","ellipse","x","y","mouseDragged","mouseX","mouseY","sendmouse","xpos","ypos","console","log","emit","ENDPOINT","Chat","location","useState","setName","setRoom","users","setUsers","message","setMessage","messages","setMessages","view","setView","useEffect","queryString","parse","search","name","room","io","error","alert","off","sendMessage","event","preventDefault","style","border","color","padding","className","onClick","height","overflowX","size","header","footer","bordered","dataSource","renderItem","item","Item","user","text","width","type","onChange","target","value","placeholder","onKeyPress","key","Join","loggedin","setLoggedin","redirectUrl","to","appId","autoLoad","fields","callback","response","scope","App","path","exact","component","ReactDom","render","document","querySelector"],"mappings":"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","file":"static/js/main.f9f48ee4.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport queryString from 'query-string'\nimport io from 'socket.io-client'\nimport {Layout, List, Button, Input } from 'antd'\nimport Sketch from \"react-p5\";\n \nconst { Header, Footer, Sider, Content } = Layout\n\nlet socket\n\nconst setup = (p5, canvasParentRef) => {\n    p5.createCanvas(500, 500).parent(canvasParentRef)\n    p5.background(0)\n    \n\tsocket.on('mouse', data => {\n        p5.fill(0,0,255);\n        p5.noStroke();\n        p5.ellipse(data.x, data.y, 20, 20);\n    })\n}\n\nconst mouseDragged = (p5) => {\n    //console.log('p5', p5)\n\tp5.fill(255);\n\tp5.noStroke();\n\tp5.ellipse(p5.mouseX, p5.mouseY, 20 ,20)\n\tsendmouse(p5.mouseX, p5.mouseY)\n}\n\n// Function for sending to the socket\nconst sendmouse = (xpos, ypos) => {\n\t// We are sending!\n\tconsole.log(\"sendmouse: \" + xpos + \" \" + ypos);\n\t\n\t// Make a little object with  and y\n\tvar data = {\n\t\tx: xpos,\n\t\ty: ypos\n\t};\n\n\t// Send that object to the socket\n  \tsocket.emit('mouse',data);\n}\n\nconst ENDPOINT = 'https://yahoo-server.herokuapp.com/'\nconst Chat = ({location}) => {\n    const [name, setName] = useState('')\n    const [room, setRoom] = useState('')\n    const [users, setUsers] = useState('');\n    const [message, setMessage] = useState()\n    const [messages, setMessages] = useState([])\n    const [view, setView] = useState('canvas')\n    \n    useEffect(()=>{\n        const {name, room} = queryString.parse(location.search)\n        \n        socket = io(ENDPOINT)\n        \n        setRoom(room)\n        setName(name)\n        console.log('before Joined')\n\n        socket.emit('join', {name, room}, (error)=>{\n            alert('Joined', error)\n        })\n\n        return () => {\n            socket.emit('disconnect')\n            socket.off()\n        }\n    }, [ENDPOINT, location.search])\n    \n    useEffect(() => {\n        socket.on('message', message => {\n          setMessages([ ...messages, message ]);\n        });\n        \n        socket.on(\"roomData\", ({ users }) => {\n          setUsers(users);\n        });\n    }, [messages]);\n    \n    const sendMessage = (event) => {\n        console.log('sendMessage')\n        event.preventDefault();\n\n        if(message) {\n            socket.emit('sendMessage', message, () => setMessage(''));\n        }\n    }\n    const chatroomHandler = () => {\n        setView('chatroom')\n    }\n\n    const blackboardHandler = () => {\n        setView('blackboard')\n    }\n    return (\n        <Layout>\n            <Header>\n                <span style={{border: '1px solid white', color: '#ccc', padding: '24px'}} className='view' onClick={chatroomHandler}>Chatroom</span>\n                <span style={{border: '1px solid white', color: '#ccc', padding: '24px'}} className='view' onClick={blackboardHandler}>Black board</span>\n            </Header>\n            <Layout>\n                <Content>\n\n                    {\n                        view === 'chatroom'\n                        ?\n                            <List\n                                style={{height: '500px', overflowX: 'scroll'}}\n                                size=\"large\"\n                                header={<div>Header</div>}\n                                footer={<div>Footer</div>}\n                                bordered\n                                dataSource={messages}\n                                renderItem={item => <List.Item>{`${item.user}: ${item.text}`}</List.Item>}\n                            />\n                        :\n                            <Sketch setup={setup} mouseDragged={mouseDragged}/>\n                    }\n                </Content>\n                <Sider>\n                    <List\n                        style={{height: '500px', overflowX: 'scroll'}}\n                        size=\"large\"\n                        bordered\n                        dataSource={users}\n                        renderItem={item => <List.Item>{`${item.name}`}</List.Item>}\n                    />\n                </Sider>\n            </Layout>\n            <Footer>\n                <>\n                <Input\n                    style={{width: '100%', padding: '24px'}}\n                    type='text'\n                    onChange={(event)=>setMessage(event.target.value)}\n                    placeholder='Type your message'\n                    onKeyPress={(event)=>event.key==='Enter' ? sendMessage(event) : null}\n                    value={message}\n                />\n                <Button onClick={(event)=>sendMessage(event)}>Send</Button>\n                </>\n            </Footer>\n        </Layout>\n    )\n}\nexport default Chat","import React, {useState} from 'react'\nimport {Link, Redirect} from 'react-router-dom'\nimport FacebookLogin from 'react-facebook-login';\n\nconst Join = () => {\n    const [name, setName] = useState('')\n    const [room, setRoom] = useState('')\n    const [loggedin, setLoggedin] = useState(false)\n    \n    const responseFacebook = (response) => {\n        console.log(response);\n        setLoggedin(true)\n        setName(response.name)\n        setRoom('101')\n    }\n    const redirectUrl = `chat?name=${name}&room=${room}`\nreturn (<div>\n        <h1>Join</h1>\n        {\n            loggedin && name && room\n            ?\n                <Redirect to={redirectUrl} />\n            :\n                <FacebookLogin\n                    appId=\"2417264378305959\"\n                    autoLoad={false}\n                    fields=\"name,email,picture\"\n                    callback={responseFacebook}\n                    scope=\"public_profile,user_friends\"\n                />\n        }\n\n    </div>\n    )\n}\nexport default Join","import React from 'react'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Chat from './components/Chat/Chat'\nimport Join from './components/Join/Join'\nimport 'antd/dist/antd.css'\nimport './App.css'\n\nconst App = () => {\n    return (\n        <Router>\n            <Route path=\"/\" exact component={Join} />\n            <Route path=\"/chat\" component={Chat} />\n        </Router>\n    )\n}\nexport default App","import React from 'react'\nimport ReactDom from 'react-dom'\nimport App from './App'\n\nReactDom.render(<App />, document.querySelector('#root'))"],"sourceRoot":""}